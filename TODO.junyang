load.c:persist_dbvector, persist_dbmatrix: what do they do?

load.c:materialize_dbvector, materialize_dbmatrix: what do they do?
the clib level functions come up with new table names, and why
aren't we handling these table names in the same way as others
(i.e., copying into R objects)?

modify.c:duplicateOrConvert: In the if branch, info->sxp_spare =
0 seems weird, because the clib level convert function will call
initRDBVector and set that to 0.  Also, I have no clue what goes
into the else branch, so I didn't touch the suspicious sxp_spare
setting and calloc there.

utils.c:initInfo/setInfo (commented out) look suspicious.

*** CHECK when initRDBVector is called.
handle_vector_views.c is weird.
though convert_vector calls it.
